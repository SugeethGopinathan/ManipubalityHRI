import("eigen_typekit")
import("rst-rt_typekit")
import("kdl_typekit")



var ConnPolicy cp


import("rtt_geometry_msgs")
import("rtt_ros")
import("rtt_rosnode")
import("rtt_sensor_msgs")
import("rtt_visualization_msgs")
import("rtt_geometry_msgs")
import("rtt_ros")
import("rtt_rosnode")
import("rtt_sensor_msgs")
import("rtt_visualization_msgs")



import("rtt-manip-estimator-2")
loadComponent("manip","ManipEstimator")
setActivity("manip",0.001,HighestPriority,ORO_SCHED_RT)
manip.configure

import("/home/kukalwr/git_repos/ManipubalityHRI/test_bridge/build/orocos/gnulinux/test_bridge")
loadComponent("tt","test_bridge")
setActivity("tt",0.001,HighestPriority,ORO_SCHED_RT)

tt.configure
tt.start


connect("tt.outport_grip","manip.cur_grip_pose_in_port",cp)

connect("tt.outport_shoulder","manip.cur_shoulder_pose_in_port",cp)

manip.start



import("rtt-manip-to-stiffness")
loadComponent("stiff","ManipToStiffness")
setActivity("stiff",0.001,HighestPriority,ORO_SCHED_RT)
stiff.configure
stiff.start

connect("manip.manip_measure_out_port","stiff.manip_measure_in_port",cp)


connect("stiff.cart_stiffdamp_out_port", "test.des_cart_stiffdamp_in_port",cp)

connect("test.cur_cart_pose_in_port","lwr.current_cartesian_pose",cp)
connect("test.cart_pose_loop_out_port", "lwr.des_cart_pose",cp)
connect("test.cart_pose_out_port", "lwr.des_cart_pose",cp)

connect("test.cart_stiffdamp_out_port", "lwr.des_stiff_damp",cp)


import("rtt-jr3-ft-sensor")
loadComponent("jr3","RTT_JR3")
setActivity("jr3",0.001,HighestPriority,ORO_SCHED_RT)
jr3.configure
jr3.start

loadComponent("logger", "OCL::FileReporting")
setActivity("logger",0.01,HighestPriority,ORO_SCHED_RT)
loadService("logger", "marshalling")
connectPeers("logger", "manip")
connectPeers("logger", "tt")
connectPeers("logger", "jr3")
logger.reportPort("manip","manip_measure_out_port")
logger.reportPort("manip","force_transmission_out_port")
logger.reportPort("tt","outport_grip")
logger.reportPort("jr3","ForceTorqueOutputPort")
logger.configure
#logger.start




test.start
#varStiff.start
#lwr.start
# var KDL.Rotation rot = KDL.Rotation(0.0,0.0,0.0)
# var KDL.Vector pos = KDL.Vector(-0.4   ,-0.4   ,0.75 )
# test.setCartesianPose(pos, rot, 15)
